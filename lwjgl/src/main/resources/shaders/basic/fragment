#version 330

in vec2 outTexCoord;
in vec3 mvVertexNormal;
in vec3 mvVertexPos;

out vec4 fragColor;

// Object color provider
uniform sampler2D texture_sampler;
uniform vec4 objectColorDiffuse;
uniform int objectHasTexture;

uniform vec3 lightColor;

uniform vec3 lightPos;

void main() {
	// Find correct color for object
	vec4 oColor = objectColorDiffuse;
	if (objectHasTexture == 1) {
		oColor = texture(texture_sampler, outTexCoord);
	}
	
	// Ambient
	float ambientStrength = 0.2;
	vec3 ambient = ambientStrength * lightColor;

	// Diffuse Lighting
	vec3 norm = mvVertexNormal;
	vec3 lightDir = normalize(lightPos - mvVertexPos);
	
	float diff = max(dot(norm, lightDir), 0.0);
	
	vec3 diffuse = diff * lightColor;

	vec3 lighting = diffuse;//ambient + diffuse;
	fragColor = vec4(lighting, 1.0) * oColor;
}