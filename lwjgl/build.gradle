plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
    id 'edu.sc.seis.launch4j'
}


import edu.sc.seis.launch4j.Launch4jPlugin
import edu.sc.seis.launch4j.tasks.Launch4jLibraryTask
import org.gradle.internal.os.OperatingSystem

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64") ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}" : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64") ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}" : "natives-windows-x86"
        break
}

shadowJar {
    archiveBaseName.set('lwjgl-test')
    archiveClassifier.set('')
    archiveVersion.set('')
    manifest {
        attributes.put('Main-Class', 'gamelauncher.lwjgl.Start')
    }
    minimize()
    minimize {
        exclude(dependency('org.bouncycastle:.*:.*'))
    }
}

launch4j {
    jarTask tasks.shadowJar
    outfile = "${project.name}.exe"
    headerType = 'gui'
    mainClassName = 'gamelauncher.lwjgl.Start'
    icon = "${projectDir}/src/main/resources/assets/gamelauncher/default_icon.ico"
    jreMinVersion = '11'
    jvmOptions = ['-Dgamelauncher.name=GameLauncherTestEXE', '-Dgamelauncher.game_directory=application']
}

static File launch4jOutput(Launch4jLibraryTask task) {
    return task.outputDirectory.file(task.outfile.get()).get().asFile
}

tasks.register('createDebugExe', Launch4jLibraryTask) {
    group = Launch4jPlugin.LAUNCH4J_GROUP
    outfile = "${project.name}-debug.exe"
    headerType = 'console'
    jvmOptions.add '-Dgamelauncher.debug=true'
}

tasks.register('runWindowsDebug', Exec) {
    dependsOn createDebugExe
    group = 'run'
    workingDir = parent.file('run')
    commandLine launch4jOutput(tasks.createDebugExe)
}

tasks.register('runWindows', Exec) {
    dependsOn createExe
    group = 'run'
    workingDir = parent.file('run')
    commandLine launch4jOutput(tasks.createExe)
}

tasks {
    jar {
        manifest {
            attributes.put('Automatic-Module-Name', 'gamelauncher.lwjgl')
        }
    }
}

dependencies {
    api parent.project('api')
    api parent.project('gles')
    api parent.project('netty')
    api libs.jansi
    api libs.commons.imaging

    var lwjgl = libs.versions.lwjgl.get()

    api platform("org.lwjgl:lwjgl-bom:$lwjgl")
    api "org.lwjgl:lwjgl"
    api "org.lwjgl:lwjgl-glfw"
    api "org.lwjgl:lwjgl-openal"
    api "org.lwjgl:lwjgl-opengl"
    api "org.lwjgl:lwjgl-opengles"
    api "org.lwjgl:lwjgl-egl"
    api "org.lwjgl:lwjgl-stb"
    api "org.lwjgl:lwjgl::$lwjglNatives"
    api "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    api "org.lwjgl:lwjgl-openal::$lwjglNatives"
    api "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    api "org.lwjgl:lwjgl-opengles::$lwjglNatives"
    api "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId project.name
            groupId = project.group
            version = project.version

            from components.java
        }
    }
}
